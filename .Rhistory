paradas$
available_tags('public_transport')
paradas$osm_lines
plot(paradas$osm_lines[[1]])
paradas$osm_points
plot(paradas$osm_points)
plot(paradas$osm_points %>% drop_na)
available_tags('public_transport')
paradas <- opq(bbox = bb2,timeout = 1000) %>%
#add_osm_feature(key = 'route',value='bus') %>%
add_osm_feature(key = 'public_transport',value='stop_position') %>%
osmdata_sf()
paradas$osm_points
paradas <- opq(bbox = bb2,timeout = 1000) %>%
#add_osm_feature(key = 'route',value='bus') %>%
add_osm_feature(key = 'public_transport',value='stop_area') %>%
osmdata_sf()
paradas$osm_points
paradas$osm_lines
available_tags('highway')
rutas <- opq(bbox = bb2,timeout = 1000) %>%
add_osm_feature(key = 'highway',value='busway') %>%
osmdata_sf()
rutas$osm_points
available_tags('highway')
rutas <- opq(bbox = bb2,timeout = 1000) %>%
add_osm_feature(key = 'highway',value='bus_stop') %>%
osmdata_sf()
rutas$osm_points
available_features('bus')
available_tags('bus')
?add_osm_feature
paradas <- opq(bbox = bb2,timeout = 1000) %>%
add_osm_feature(features = c(
"\"highway\"=\"bus_stop\"",
"\"public_transport\"=\"patform\"",
"\"public_transport\"=\"stop_position\"",
"\"public_transport\"=\"stop_area\"",
"\"type\"=\"public_transport\""
)) %>%
osmdata_sf()
paradas <- opq(bbox = bb2,timeout = 1000) %>%
add_osm_feature(features = c(
"\"highway\"=\"bus_stop\"",
"\"public_transport\"=\"patform\"",
"\"public_transport\"=\"stop_position\"",
"\"public_transport\"=\"stop_area\"",
"\"type\"=\"public_transport\""
)) %>%
osmdata_sf()
c(
"\"highway\"=\"bus_stop\"",
"\"public_transport\"=\"patform\"",
"\"public_transport\"=\"stop_position\"",
"\"public_transport\"=\"stop_area\"",
"\"type\"=\"public_transport\""
)
paradas <- opq(bbox = bb2,timeout = 1000) %>%
add_osm_feature(features = c(
"\"highway\"=\"bus_stop\"",
"\"public_transport\"=\"patform\"",
"\"public_transport\"=\"stop_position\"",
"\"public_transport\"=\"stop_area\"",
"\"type\"=\"public_transport\""
))
paradas <- opq(bbox = bb2,timeout = 1000) %>%
add_osm_features(features = c(
"\"highway\"=\"bus_stop\"",
"\"public_transport\"=\"patform\"",
"\"public_transport\"=\"stop_position\"",
"\"public_transport\"=\"stop_area\"",
"\"type\"=\"public_transport\""
)) %>%
osmdata_sf()
paradas
paradas <- opq(bbox = bb2,timeout = 1000) %>%
add_osm_features(features = c(
"\"highway\"=\"bus_stop\"",
"\"public_transport\"=\"patform\"",
"\"public_transport\"=\"stop_position\"",
"\"public_transport\"=\"stop_area\"",
"\"type\"=\"public_transport\""
)) %>%
osmdata_sf()
paradas
paradas$osm_lines
paradas$osm_multilines
paradas$osm_points
paradas$osm_points %>% View
paradas$osm_points %>% select(network)
paradas$osm_points %>% select(network) %>% drop_na()
available_features()
paradas <- opq(bbox = bb2,timeout = 1000) %>%
add_osm_feature(key = 'type',value='route') %>%
add_osm_feature(key = 'route',value='bus') %>%
osmdata_sf()
paradas$osm_lines
paradas$osm_lines %>% View
paradas <- opq(bbox = bb2,timeout = 1000) %>%
add_osm_feature(key = 'type',value='route') %>%
add_osm_feature(key = 'route',value='minibus') %>%
osmdata_sf()
paradas <- opq(bbox = bb2,timeout = 1000) %>%
add_osm_feature(key = 'type',value='route_master') %>%
add_osm_feature(key = 'route_master',value='bus') %>%
osmdata_sf()
paradas$osm_points
paradas$osm_points %>% View
paradas <- opq(bbox = bb2,timeout = 1000) %>%
add_osm_feature(key = 'type',value='route_master') %>%
osmdata_sf()
paradas$osm_polygons
paradas$osm_polygons %>% View
paradas$osm_points %>% View
dbinom(-3,10,.5)
dbinom(20,10,.5)
P_1 <- function(x,N=1){
r <- 1/(N+1) * !(x < 0 | x > N)
return(r)
}
P_2 <- function(x,N=1){
r <- dbinom(x = x,size = N,prob = .5)
return(r)
}
P_3 <- function(x,N=1,p=.25){
r <- dbinom(x = x,size = N,prob = p)
return(r)
}
A_X <- function(N){
return( (0:N)/N )
}
Xs <- A_X(10)
P_1 <- function(x,N=1){
r <- 1/(N+1) * !(x < 0 | x > N)
return(r)
}
P_2 <- function(x,N=1){
r <- dbinom(x = N*x,size = N,prob = .5)
return(r)
}
P_3 <- function(x,N=1,p=.25){
r <- dbinom(x = N*x,size = N,prob = p)
return(r)
}
A_X <- function(N){
return( (0:N)/N )
}
P_1(Xs,10)
sum(P_1(Xs,10))
sum(P_2(Xs,10))
P_2(Xs,10)
P_1 <- function(x,N=1){
r <- 1/(N+1) * !(x < 0 | x > N)
return(r)
}
P_2 <- function(x,N=1){
r <- dbinom(x = N*x,size = N,prob = .5)
return(r)
}
P_3 <- function(x,N=1,p=.25){
r <- dbinom(x = N*x,size = N,prob = p)
return(r)
}
A_X <- function(N){
return( (0:N)/N )
}
D12 <- sapply(1:10,function(N){
alfabeto <- A_X(N)
P_1(alfabeto,N) * log2(P_1(alfabeto,N)/P_2(alfabeto,N))
})
D12
D12 <- sapply(1:10,function(N){
alfabeto <- A_X(N)
sum(P_1(alfabeto,N) * log2(P_1(alfabeto,N)/P_2(alfabeto,N)))
})
D12
D12 <- sapply(1:10,function(N){
alfabeto <- A_X(N)
sum(P_1(alfabeto,N) * log2(P_1(alfabeto,N)/P_2(alfabeto,N)))
})
D21 <- sapply(1:10,function(N){
alfabeto <- A_X(N)
sum(P_2(alfabeto,N) * log2(P_2(alfabeto,N)/P_1(alfabeto,N)))
})
data.frame(N = Ns, D12 = D12, D21 = D21) %>%
ggplot(aes(x = D12, y = D21,color = N)) +
geom_point()+
geom_line()
library(tidyverse)
data.frame(N = Ns, D12 = D12, D21 = D21) %>%
ggplot(aes(x = D12, y = D21,color = N)) +
geom_point()+
geom_line()
Ns <- 1:10
D12 <- sapply(Ns,function(N){
alfabeto <- A_X(N)
sum(P_1(alfabeto,N) * log2(P_1(alfabeto,N)/P_2(alfabeto,N)))
})
D21 <- sapply(Ns,function(N){
alfabeto <- A_X(N)
sum(P_2(alfabeto,N) * log2(P_2(alfabeto,N)/P_1(alfabeto,N)))
})
library(tidyverse)
data.frame(N = Ns, D12 = D12, D21 = D21) %>%
ggplot(aes(x = D12, y = D21,color = N)) +
geom_point()+
geom_line()
library(tidyverse)
data.frame(N = Ns, D12 = D12, D21 = D21) %>%
ggplot(aes(x = D12, y = D21,color = N)) +
geom_point() +
geom_line() +
geom_abline(slope = 1, intercept = 0)
library(latex2exp)
library(tidyverse)
library(latex2exp)
data.frame(N = Ns, D12 = D12, D21 = D21) %>%
ggplot(aes(x = D12, y = D21,color = N)) +
geom_point() +
geom_line() +
geom_abline(slope = 1, intercept = 0) +
xlab(TeX("$D_{KL} (P_1 \rightarrow P_2$"))
library(tidyverse)
library(latex2exp)
data.frame(N = Ns, D12 = D12, D21 = D21) %>%
ggplot(aes(x = D12, y = D21,color = N)) +
geom_point() +
geom_line() +
geom_abline(slope = 1, intercept = 0) +
xlab(TeX("$D_{KL} (P_1 \\rightarrow P_2$"))
library(tidyverse)
library(latex2exp)
data.frame(N = Ns, D12 = D12, D21 = D21) %>%
ggplot(aes(x = D12, y = D21,color = N)) +
geom_point() +
geom_line() +
geom_abline(slope = 1, intercept = 0) +
xlab(TeX("$D_{KL} (P_1 \\rightarrow P_2)$")) +
xlab(TeX("$D_{KL} (P_2 \\rightarrow P_1)$"))
library(tidyverse)
library(latex2exp)
data.frame(N = Ns, D12 = D12, D21 = D21) %>%
ggplot(aes(x = D12, y = D21,color = N)) +
geom_point() +
geom_line() +
geom_abline(slope = 1, intercept = 0) +
xlab(TeX("$D_{KL} (P_1 \\rightarrow P_2)$")) +
ylab(TeX("$D_{KL} (P_2 \\rightarrow P_1)$"))
Ns <- 1:100
D12 <- sapply(Ns,function(N){
alfabeto <- A_X(N)
sum(P_1(alfabeto,N) * log2(P_1(alfabeto,N)/P_2(alfabeto,N)))
})
D21 <- sapply(Ns,function(N){
alfabeto <- A_X(N)
sum(P_2(alfabeto,N) * log2(P_2(alfabeto,N)/P_1(alfabeto,N)))
})
library(tidyverse)
library(latex2exp)
data.frame(N = Ns, D12 = D12, D21 = D21) %>%
ggplot(aes(x = D12, y = D21,color = N)) +
geom_point() +
geom_line() +
geom_abline(slope = 1, intercept = 0) +
xlab(TeX("$D_{KL} (P_1 \\rightarrow P_2)$")) +
ylab(TeX("$D_{KL} (P_2 \\rightarrow P_1)$"))
Ns <- 1:1000
D12 <- sapply(Ns,function(N){
alfabeto <- A_X(N)
sum(P_1(alfabeto,N) * log2(P_1(alfabeto,N)/P_2(alfabeto,N)))
})
D21 <- sapply(Ns,function(N){
alfabeto <- A_X(N)
sum(P_2(alfabeto,N) * log2(P_2(alfabeto,N)/P_1(alfabeto,N)))
})
library(tidyverse)
library(latex2exp)
data.frame(N = Ns, D12 = D12, D21 = D21) %>%
ggplot(aes(x = D12, y = D21,color = N)) +
geom_point() +
geom_line() +
geom_abline(slope = 1, intercept = 0) +
xlab(TeX("$D_{KL} (P_1 \\rightarrow P_2)$")) +
ylab(TeX("$D_{KL} (P_2 \\rightarrow P_1)$"))
library(tidyverse)
library(latex2exp)
data.frame(N = Ns, D12 = D12, D21 = D21) %>%
ggplot(aes(x = D12, y = D21,color = N)) +
#geom_point() +
geom_line() +
geom_abline(slope = 1, intercept = 0) +
xlab(TeX("$D_{KL} (P_1 \\rightarrow P_2)$")) +
ylab(TeX("$D_{KL} (P_2 \\rightarrow P_1)$"))
data.frame(N = Ns, D12 = D12, D21 = D21) %>%
ggplot(aes(x = D12, y = D21,color = N)) +
#geom_point() +
geom_line() +
geom_abline(slope = 1, intercept = 0) +
xlab(TeX("$D_{KL} (P_1 \\rightarrow P_2)$")) +
ylab(TeX("$D_{KL} (P_2 \\rightarrow P_1)$")) +
theme(aspect.ratio = 1)
data.frame(N = Ns, D12 = D12, D21 = D21) %>%
ggplot(aes(x = D12, y = D21,color = N)) +
#geom_point() +
geom_line() +
geom_abline(slope = 1, intercept = 0) +
xlab(TeX("$D_{KL} (P_1 \\rightarrow P_2)$")) +
ylab(TeX("$D_{KL} (P_2 \\rightarrow P_1)$")) +
coord_fixed()
Ns <- 1:10
D12 <- sapply(Ns,function(N){
alfabeto <- A_X(N)
sum(P_1(alfabeto,N) * log2(P_1(alfabeto,N)/P_2(alfabeto,N)))
})
D21 <- sapply(Ns,function(N){
alfabeto <- A_X(N)
sum(P_2(alfabeto,N) * log2(P_2(alfabeto,N)/P_1(alfabeto,N)))
})
library(tidyverse)
library(latex2exp)
data.frame(N = Ns, D12 = D12, D21 = D21) %>%
ggplot(aes(x = D12, y = D21,color = N)) +
#geom_point() +
geom_line() +
geom_abline(slope = 1, intercept = 0) +
xlab(TeX("$D_{KL} (P_1 \\rightarrow P_2)$")) +
ylab(TeX("$D_{KL} (P_2 \\rightarrow P_1)$")) +
coord_fixed()
library(tidyverse)
library(latex2exp)
data.frame(N = Ns, D12 = D12, D21 = D21) %>%
ggplot(aes(x = D12, y = D21,color = N)) +
#geom_point() +
geom_line() +
geom_abline(slope = 1, intercept = 0) +
xlab(TeX("$D_{KL} (P_1 \\rightarrow P_2)$")) +
ylab(TeX("$D_{KL} (P_2 \\rightarrow P_1)$")) +
coord_fixed()
Ns <- 1:100
D12 <- sapply(Ns,function(N){
alfabeto <- A_X(N)
sum(P_1(alfabeto,N) * log2(P_1(alfabeto,N)/P_2(alfabeto,N)))
})
D21 <- sapply(Ns,function(N){
alfabeto <- A_X(N)
sum(P_2(alfabeto,N) * log2(P_2(alfabeto,N)/P_1(alfabeto,N)))
})
library(tidyverse)
library(latex2exp)
data.frame(N = Ns, D12 = D12, D21 = D21) %>%
ggplot(aes(x = D12, y = D21,color = N)) +
#geom_point() +
geom_line() +
geom_abline(slope = 1, intercept = 0) +
xlab(TeX("$D_{KL} (P_1 \\rightarrow P_2)$")) +
ylab(TeX("$D_{KL} (P_2 \\rightarrow P_1)$")) +
coord_fixed()
data.frame(N = Ns, D12 = D12, D21 = D21) %>%
ggplot(aes(x = D12, y = D21,color = N)) +
#geom_point() +
geom_line() +
geom_abline(slope = 1, intercept = 0) +
xlab(TeX("$D_{KL} (P_1 \\rightarrow P_2)$")) +
ylab(TeX("$D_{KL} (P_2 \\rightarrow P_1)$")) +
coord_fixed()
P_empirica <- function(x,muestras){
return(mean(muestras==x))
}
muestras <- rbinom(n=100,size=10,prob=.5)
muestras <- rbinom(n=100,size=10,prob=.5)/10
muestras
alfabeto <- A_X(10)
alfabeto
P_empirica(alfabeto,muestras)
?Vectorize
P_empirica <- function(x,muestras){
return(sapply(x,function(xi) mean(muestras==xi)))
}
P_empirica(alfabeto,muestras)
P_1(alfabeto,10)
P_empirica(alfabeto,muestras)
D1E <- sum(P_1(alfabeto,10)*log2(P_1(alfabeto,10)/P_empirica(alfabeto,muestras)))
D1E
D2E <- sum(P_2(alfabeto,10)*log2(P_2(alfabeto,10)/P_empirica(alfabeto,muestras)))
D2E
muestras <- rbinom(n=1000,size=10,prob=.5)/10
alfabeto <- A_X(10)
D1E <- sum(P_1(alfabeto,10)*log2(P_1(alfabeto,10)/P_empirica(alfabeto,muestras)))
D2E <- sum(P_2(alfabeto,10)*log2(P_2(alfabeto,10)/P_empirica(alfabeto,muestras)))
D1E
D2E
knitr::opts_chunk$set(echo = FALSE)
library(igraph)
?make_lattice()
tree_grid <- make_lattice(dimvector = c(5,5))
plot(forest_grid)
forest_grid <- make_lattice(dimvector = c(5,5))
plot(forest_grid)
forest_grid <- make_lattice(dim=4,length=4)
plot(forest_grid)
forest_grid <- make_lattice(dim=2,length=4)
plot(forest_grid)
forest_grid <- make_lattice(dim=3,length=2)
plot(forest_grid)
forest_grid <- make_lattice(dimvector = c(10,10))
plot(forest_grid)
forest_grid <- make_lattice(dimvector = c(5,5))
plot(forest_grid)
expand.grid(1:10,1:10)
library(igraph)
lgrid <- expand.grid(1:10,1:10) %>% as.matrix()
forest_grid <- make_lattice(dimvector = c(5,5))
plot(forest_grid,layout=lgrid)
library(igraph)
lgrid <- expand.grid(1:5,1:5) %>% as.matrix()
forest_grid <- make_lattice(dimvector = c(5,5))
plot(forest_grid,layout=lgrid)
library(igraph)
lgrid <- expand.grid(1:5,1:5) %>% as.matrix()
forest_grid <- make_lattice(dimvector = c(5,5))
par(mar=c(2,2,2,1))
plot(forest_grid,layout=lgrid)
V(forest_grid)
V(forest_grid)$name
full_grid <- forest_grid %>% add_vertices(1,name = 'a')
V(full_grid)
full_grid <- forest_grid %>% set_vertex_attr('name',1:vcount(forest_grid))%>% add_vertices(1,name = 'a')
full_grid <- forest_grid %>% set_vertex_attr('name',value 1:vcount(forest_grid))%>% add_vertices(1,name = 'a')
full_grid <- forest_grid %>%
set_vertex_attr('name',value = 1:vcount(forest_grid)) %>%
add_vertices(1,name = 'a')
V(full_grid)
V(full_grid)$name
full_grid <- forest_grid %>%
set_vertex_attr('name',value = 1:vcount(forest_grid)) %>%
add_vertices(1,name = 'fs') %>% add_edges(c('fs','1')) %>% plot
add_vertices(1,name = 'fs') %>%
add_edges(c('fs','1',
'fs','2','2','6','6','12','12','18',
'fs','3','3','9','9','15','15','19'),attr = list('color','blue')) %>% plot
forest_grid %>%
set_vertex_attr('name',value = 1:vcount(forest_grid))
forest_grid %>%
set_vertex_attr('name',value = 1:vcount(forest_grid)) %>%
set_edge_attr('color',value='green') %>%
add_vertices(1,name = 'fs') %>%
add_edges(c('fs','1',
'fs','2','2','6','6','12','12','18',
'fs','3','3','9','9','15','15','19'),attr = list('color','blue')) %>% plot
full_grid <- forest_grid %>%
set_vertex_attr('name',value = 1:vcount(forest_grid)) %>%
set_edge_attr('color',value='green') %>%
add_vertices(1,name = 'fs') %>%
add_edges(c('fs','1',
'fs','2','2','6','6','12','12','18',
'fs','3','3','9','9','15','15','19'),attr = list('color'='blue')) %>% plot
forest_grid
lgrid
library(igraph)
full_grid <- forest_grid %>%
set_vertex_attr('name',value = 1:vcount(forest_grid)) %>%
set_edge_attr('color',value='green') %>%
add_vertices(1,name = 'fs') %>%
add_edges(c('fs','1',
'fs','2','2','6','6','12','12','18',
'fs','3','3','9','9','15','15','19'),attr = list('color'='blue'))
lfull = lgrid %>% rbind(c(2,-1))
par(mar=c(2,2,2,1))
plot(full_grid,layout=lfull)
library(igraph)
full_grid <- forest_grid %>%
set_vertex_attr('name',value = 1:vcount(forest_grid)) %>%
set_edge_attr('color',value='green') %>%
add_vertices(1,name = 'fs') %>%
add_edges(c('fs','1',
'fs','2','2','6','6','12','12','18',
'fs','3','3','9','9','15','15','19',
'12','16','16','22'),
attr = list('color'='blue'))
lfull = lgrid %>% rbind(c(2,-1))
par(mar=c(2,2,2,1))
plot(full_grid,layout=lfull)
library(igraph)
full_grid <- forest_grid %>%
set_vertex_attr('name',value = 1:vcount(forest_grid)) %>%
set_edge_attr('color',value='green') %>%
add_vertices(1,name = 'fs') %>%
add_edges(c('fs','1',
'fs','2','2','6','6','12','12','18',
'fs','3','3','9','9','15','15','19','19','24',
'12','16','16','22'),
attr = list('color'='blue'))
lfull = lgrid %>% rbind(c(2,-1))
par(mar=c(2,2,2,1))
plot(full_grid,layout=lfull)
```{r message=FALSE, fig.width=15, fig.height=3,fig.align='center'}
library(igraph)
full_grid <- forest_grid %>%
set_vertex_attr('name',value = 1:vcount(forest_grid)) %>%
set_edge_attr('color',value='green') %>%
add_vertices(1,name = 'fs') %>%
add_edges(c('fs','1','9','5',
'fs','2','2','6','6','12','12','18',
'fs','3','3','9','9','15','15','19','19','24',
'12','16','16','22'),
attr = list('color'='blue'))
lfull = lgrid %>% rbind(c(2,-1))
par(mar=c(2,2,2,1))
plot(full_grid,layout=lfull)
setwd("~/LABURO/taller de datos populares/economia_popular")
shiny::runApp('tablero')
runApp('tablero')
